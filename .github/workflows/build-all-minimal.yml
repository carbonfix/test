name: build-all-minimal

on:
  workflow_dispatch:
    inputs:

      branch:
        description: 'Branch'
        required: true
        type: choice
        options:
          - current
          - edge
          - vendor
        default: current

      regional:
        description: 'Regional mirror'
        required: true
        type: choice
        options:
          - china
          - global
        default: china

jobs:
  build:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        board:
          - rockchip-sapphire
          - nanopim4v2
          - rock-4b
        release:
          - bookworm
          - jammy
          - noble

    steps:
      - name: Install required packages
        run: |
          sudo apt update
          sudo apt install -y neofetch

      - name: Show host info
        run: |
          lscpu
          free -h
          df -hT ${PWD}
          neofetch

      - name: Checkout targets
        uses: actions/checkout@v4

      - name: Checkout armbian
        run: |
          git clone -q --single-branch --depth=1 --branch=main https://github.com/armbian/build.git

      - name: Copy targets
        run: |
          cp -rvf userpatches build/

      - name: Set up env
        run: |
          if [ "${{ inputs.regional }}" == "china" ]; then
            echo "Setting up for regional china..."
            echo "regional_mirror='china'" >> $GITHUB_ENV
          else
            echo "Setting up for regional global..."
            echo "regional_mirror=''" >> $GITHUB_ENV
          fi

      - name: Build [ ${{ matrix.board }} - ${{ matrix.release }} - ${{ inputs.branch }} - ${{ inputs.regional }} ]
        run: |
          echo "regional_mirror: ${{ env.regional_mirror }}"
          pushd build
          ./compile.sh build BOARD=${{ matrix.board }} \
          BRANCH=${{ inputs.branch }} \
          BUILD_DESKTOP=no BUILD_MINIMAL=yes \
          KERNEL_CONFIGURE=no \
          RELEASE=${{ matrix.release }} \
          REGIONAL_MIRROR=${{ env.regional_mirror }} \
          COMPRESS_OUTPUTIMAGE=sha,img,xz
          popd

      - name: Show remaining space
        run: |
          df -hT ${PWD}

      - name: Show images
        run: |
          ls -lh ${{ github.workspace }}/build/output/images
          echo "buildtime=$(date +"%Y.%m")" >> $GITHUB_ENV

      - name: Upload images
        uses: ncipollo/release-action@main
        if: success()
        with:
          tag: "${{ inputs.regional }}_${{ matrix.release }}_${{ inputs.branch }}_${{ env.buildtime }}"
          artifacts: "${{ github.workspace }}/build/output/images/*"
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ### Armbian Image information
            - Default username: root
            - Default password: 1234
            - Config command: armbian-config
            - Upgrade command: armbian-upgrade
            - Install command: armbian-install
          draft: false
          prerelease: false
